{"ast":null,"code":"var R = require('ramda');\n\nvar traverse = require('traverse');\n\nmodule.exports = R.curry(function sanitize(opts, tree) {\n  var options = require('./options')(opts);\n\n  var namekey = options.namekey;\n  var hasNameKey = R.has(namekey);\n  var tagkey = options.tagkey;\n  var filters = options.filters;\n  return traverse.map(tree, function (value) {\n    var update = this.update;\n\n    this.update = function (val, stopHere) {\n      value = val;\n      update.call(this, val, stopHere);\n    };\n\n    if (this.notLeaf && hasNameKey(value)) {\n      Object.assign(value, R.objOf(tagkey, value[namekey]));\n      delete value[namekey];\n    }\n\n    filters.forEach(function (fn) {\n      fn.call(this, value);\n    }, this);\n  });\n});","map":null,"metadata":{},"sourceType":"script"}