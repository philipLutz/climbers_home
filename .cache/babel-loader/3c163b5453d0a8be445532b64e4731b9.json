{"ast":null,"code":"/**\n * Expose `Compiler`.\n */\nmodule.exports = Compiler;\n/**\n * Initialize a compiler.\n *\n * @param {Type} name\n * @return {Type}\n * @api public\n */\n\nfunction Compiler(opts) {\n  this.options = opts || {};\n}\n/**\n * Emit `str`\n */\n\n\nCompiler.prototype.emit = function (str) {\n  return str;\n};\n/**\n * Visit `node`.\n */\n\n\nCompiler.prototype.visit = function (node) {\n  return this[node.type](node);\n};\n/**\n * Map visit over array of `nodes`, optionally using a `delim`\n */\n\n\nCompiler.prototype.mapVisit = function (nodes, delim) {\n  var buf = '';\n  delim = delim || '';\n\n  for (var i = 0, length = nodes.length; i < length; i++) {\n    buf += this.visit(nodes[i]);\n    if (delim && i < length - 1) buf += this.emit(delim);\n  }\n\n  return buf;\n};","map":null,"metadata":{},"sourceType":"script"}