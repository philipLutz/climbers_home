{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Base = require('./compiler');\n\nvar inherits = require('inherits');\n/**\n * Expose compiler.\n */\n\n\nmodule.exports = Compiler;\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  Base.call(this, options);\n  this.indentation = options.indent;\n}\n/**\n * Inherit from `Base.prototype`.\n */\n\n\ninherits(Compiler, Base);\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function (node) {\n  return this.stylesheet(node);\n};\n/**\n * Visit stylesheet node.\n */\n\n\nCompiler.prototype.stylesheet = function (node) {\n  return this.mapVisit(node.stylesheet.rules, '\\n\\n');\n};\n/**\n * Visit comment node.\n */\n\n\nCompiler.prototype.comment = function (node) {\n  return this.emit(this.indent() + '/*' + node.comment + '*/', node.position);\n};\n/**\n * Visit import node.\n */\n\n\nCompiler.prototype.import = function (node) {\n  return this.emit('@import ' + node.import + ';', node.position);\n};\n/**\n * Visit media node.\n */\n\n\nCompiler.prototype.media = function (node) {\n  return this.emit('@media ' + node.media, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit(this.indent(-1) + '\\n}');\n};\n/**\n * Visit document node.\n */\n\n\nCompiler.prototype.document = function (node) {\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n  return this.emit(doc, node.position) + this.emit(' ' + ' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit(this.indent(-1) + '\\n}');\n};\n/**\n * Visit charset node.\n */\n\n\nCompiler.prototype.charset = function (node) {\n  return this.emit('@charset ' + node.charset + ';', node.position);\n};\n/**\n * Visit namespace node.\n */\n\n\nCompiler.prototype.namespace = function (node) {\n  return this.emit('@namespace ' + node.namespace + ';', node.position);\n};\n/**\n * Visit supports node.\n */\n\n\nCompiler.prototype.supports = function (node) {\n  return this.emit('@supports ' + node.supports, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit(this.indent(-1) + '\\n}');\n};\n/**\n * Visit keyframes node.\n */\n\n\nCompiler.prototype.keyframes = function (node) {\n  return this.emit('@' + (node.vendor || '') + 'keyframes ' + node.name, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.keyframes, '\\n') + this.emit(this.indent(-1) + '}');\n};\n/**\n * Visit keyframe node.\n */\n\n\nCompiler.prototype.keyframe = function (node) {\n  var decls = node.declarations;\n  return this.emit(this.indent()) + this.emit(node.values.join(', '), node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(decls, '\\n') + this.emit(this.indent(-1) + '\\n' + this.indent() + '}\\n');\n};\n/**\n * Visit page node.\n */\n\n\nCompiler.prototype.page = function (node) {\n  var sel = node.selectors.length ? node.selectors.join(', ') + ' ' : '';\n  return this.emit('@page ' + sel, node.position) + this.emit('{\\n') + this.emit(this.indent(1)) + this.mapVisit(node.declarations, '\\n') + this.emit(this.indent(-1)) + this.emit('\\n}');\n};\n/**\n * Visit font-face node.\n */\n\n\nCompiler.prototype['font-face'] = function (node) {\n  return this.emit('@font-face ', node.position) + this.emit('{\\n') + this.emit(this.indent(1)) + this.mapVisit(node.declarations, '\\n') + this.emit(this.indent(-1)) + this.emit('\\n}');\n};\n/**\n * Visit host node.\n */\n\n\nCompiler.prototype.host = function (node) {\n  return this.emit('@host', node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit(this.indent(-1) + '\\n}');\n};\n/**\n * Visit custom-media node.\n */\n\n\nCompiler.prototype['custom-media'] = function (node) {\n  return this.emit('@custom-media ' + node.name + ' ' + node.media + ';', node.position);\n};\n/**\n * Visit rule node.\n */\n\n\nCompiler.prototype.rule = function (node) {\n  var indent = this.indent();\n  var decls = node.declarations;\n  if (!decls.length) return '';\n  return this.emit(node.selectors.map(function (s) {\n    return indent + s;\n  }).join(',\\n'), node.position) + this.emit(' {\\n') + this.emit(this.indent(1)) + this.mapVisit(decls, '\\n') + this.emit(this.indent(-1)) + this.emit('\\n' + this.indent() + '}');\n};\n/**\n * Visit declaration node.\n */\n\n\nCompiler.prototype.declaration = function (node) {\n  return this.emit(this.indent()) + this.emit(node.property + ': ' + node.value, node.position) + this.emit(';');\n};\n/**\n * Increase, decrease or return current indentation.\n */\n\n\nCompiler.prototype.indent = function (level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};","map":null,"metadata":{},"sourceType":"script"}