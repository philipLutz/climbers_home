{"ast":null,"code":"var R = require('ramda');\n\nvar DEFAULTS = {\n  tagName: 'tagname',\n  propsName: 'props',\n  childrenName: 'children'\n};\n\nmodule.exports = function configureNormalizeNode(opts) {\n  var options = R.merge(DEFAULTS, opts || {});\n  var props = options.propsName;\n  var children = options.childrenName;\n  var tagname = options.tagName;\n  var hasProps = R.has(props);\n  var hasChildren = R.has(children);\n  var pickKeys = R.pick([props, tagname, children]);\n  return function normalizeNode(value) {\n    if (hasProps(value) || hasChildren(value)) {\n      this.update(pickKeys(value));\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}