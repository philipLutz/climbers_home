{"ast":null,"code":"var R = require('ramda');\n\nvar objectToElement = R.unary(fromObject);\nvar mapChildren = R.pipe(function (children) {\n  return children.map(function (child, idx) {\n    child.props = R.merge(child.props || {}, {\n      key: idx\n    });\n    return child;\n  });\n}, R.map(objectToElement));\n\nfunction fromObject(obj, isRoot) {\n  if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  }\n\n  var tagname = obj.tagname;\n  var props = obj.props;\n  var children = obj.children;\n  var result = '';\n\n  if (isRoot) {\n    result += '    return ';\n  }\n\n  result += 'React.createElement(' + JSON.stringify(tagname);\n\n  if (props && !isRoot) {\n    result += ',' + JSON.stringify(props);\n  } else if (isRoot) {\n    result += ',props';\n  } else {\n    result += ',null';\n  }\n\n  if (children && children.length) {\n    result += children.length === 1 ? ',' + fromObject(children[0]) : ',[' + mapChildren(children).join(',') + ']';\n  }\n\n  result += ')';\n\n  if (isRoot) {\n    result += ';';\n  }\n\n  return result;\n}\n\nmodule.exports = fromObject;","map":null,"metadata":{},"sourceType":"script"}