{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Compressed = require('./compress');\n\nvar Identity = require('./identity');\n/**\n * Stringfy the given AST `node`.\n *\n * Options:\n *\n *  - `compress` space-optimized output\n *  - `sourcemap` return an object with `.code` and `.map`\n *\n * @param {Object} node\n * @param {Object} [options]\n * @return {String}\n * @api public\n */\n\n\nmodule.exports = function (node, options) {\n  options = options || {};\n  var compiler = options.compress ? new Compressed(options) : new Identity(options); // source maps\n\n  if (options.sourcemap) {\n    var sourcemaps = require('./source-map-support');\n\n    sourcemaps(compiler);\n    var code = compiler.compile(node);\n    compiler.applySourceMaps();\n    var map = options.sourcemap === 'generator' ? compiler.map : compiler.map.toJSON();\n    return {\n      code: code,\n      map: map\n    };\n  }\n\n  var code = compiler.compile(node);\n  return code;\n};","map":null,"metadata":{},"sourceType":"script"}