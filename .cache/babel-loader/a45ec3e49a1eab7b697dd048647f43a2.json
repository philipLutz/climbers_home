{"ast":null,"code":"import _classCallCheck from \"/Users/philipandrewlutz/climbers_home/react-climbers-home/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/philipandrewlutz/climbers_home/react-climbers-home/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/philipandrewlutz/climbers_home/react-climbers-home/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/philipandrewlutz/climbers_home/react-climbers-home/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/philipandrewlutz/climbers_home/react-climbers-home/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/philipandrewlutz/climbers_home/react-climbers-home/src/components/calendar/calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar';\nimport { getEvents } from './getEvents.js';\nimport './calendar.css';\nimport './react-big-calendar.css'; // const GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n// const calendarURL = 'https://calendar.google.com/calendar/embed?src=51dtqg3dukqtjp0i3delels808%40group.calendar.google.com&ctz=America%2FLos_Angeles';\n// const calendar_configuration = {\n//     api_key: GOOGLE_API_KEY,\n//     calendars: [\n//       {\n//         name: 'Climber\\'s Home', // whatever you want to name it\n//         url: calendarURL // your calendar URL\n//       }\n//     ],\n//     dailyRecurrence: 700,\n//     weeklyRecurrence: 500,\n//     monthlyRecurrence: 20\n// }\n\nvar CalendarPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarPage, _React$Component);\n\n  function CalendarPage() {\n    var _this2;\n\n    _classCallCheck(this, CalendarPage);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(CalendarPage).call(this));\n    _this2.state = {\n      events: [],\n      dayChosen: new Date()\n    };\n    return _this2;\n  }\n\n  _createClass(CalendarPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      getEvents(function (response) {\n        var events = [];\n\n        for (var i = 0; i < response.length; i++) {\n          events.push(response[i]);\n        }\n\n        _this3.setState({\n          events: events\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var localizer = BigCalendar.momentLocalizer(moment);\n      return React.createElement(\"div\", {\n        id: \"calendar-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"calendar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        id: \"calendar\",\n        events: this.state.events,\n        views: ['month'],\n        localizer: localizer,\n        showMultiDayTimes: true,\n        step: 60,\n        defaultDate: new Date(),\n        date: this.state.dayChosen,\n        onNavigate: function onNavigate(focusDate, flipUnit, prevOrNext) {\n          var _this = _this4;\n          var now = new Date();\n          var nowNum = now.getDate();\n          var current = _this.state.dayChosen;\n          var currentNum = current.getDate();\n          var nextMonth = moment(current).add(1, \"month\").toDate();\n          var nextMonthNum = nextMonth.getDate();\n          var prevMonth = moment(current).subtract(1, \"month\").toDate();\n          var prevMonthNum = prevMonth.getDate();\n\n          if (prevOrNext === \"NEXT\") {\n            _this.setState({\n              dayChosen: nextMonth\n            });\n          } else if (prevOrNext === \"PREV\" && currentNum <= moment(now).add(1, \"month\").toDate().getDate()) {} else if (prevOrNext === \"PREV\") {\n            _this.setState({\n              dayChosen: prevMonth\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))); // return (\n      // \t<div>\n      // \t\t<iframe src=\"https://calendar.google.com/calendar/embed?src=51dtqg3dukqtjp0i3delels808%40group.calendar.google.com&ctz=America%2FLos_Angeles\" ></iframe>\n      // \t</div>\n      // );\n      // return (\n      // \t<div id=\"calendar-container\">\n      // \t\t<p id=\"calendar-p\">\n      // \t\t\tThis calendar feature to reference while making your reservation is not available right now.  We will get it up and running as soon as possible.\n      // \t\t</p>\n      // \t</div>\n      // );\n    }\n  }]);\n\n  return CalendarPage;\n}(React.Component);\n\nexport { CalendarPage as default };","map":{"version":3,"sources":["/Users/philipandrewlutz/climbers_home/react-climbers-home/src/components/calendar/calendar.js"],"names":["React","moment","BigCalendar","getEvents","CalendarPage","state","events","dayChosen","Date","response","i","length","push","setState","localizer","momentLocalizer","focusDate","flipUnit","prevOrNext","_this","now","nowNum","getDate","current","currentNum","nextMonth","add","toDate","nextMonthNum","prevMonth","subtract","prevMonthNum","Component"],"mappings":"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","sourcesContent":["import React \t\t\tfrom 'react';\nimport moment \t\t\tfrom 'moment';\nimport BigCalendar \t\tfrom 'react-big-calendar';\nimport { getEvents } \tfrom './getEvents.js';\nimport './calendar.css';\nimport './react-big-calendar.css';\n\n// const GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n// const calendarURL = 'https://calendar.google.com/calendar/embed?src=51dtqg3dukqtjp0i3delels808%40group.calendar.google.com&ctz=America%2FLos_Angeles';\n\n// const calendar_configuration = {\n//     api_key: GOOGLE_API_KEY,\n//     calendars: [\n//       {\n//         name: 'Climber\\'s Home', // whatever you want to name it\n//         url: calendarURL // your calendar URL\n//       }\n//     ],\n//     dailyRecurrence: 700,\n//     weeklyRecurrence: 500,\n//     monthlyRecurrence: 20\n// }\n\n\n\nexport default class CalendarPage extends React.Component {\n\tconstructor () {\n\t    super()\n\t    this.state = {\n\t      events: [],\n\t      dayChosen: new Date()\n\t\t}\n\t}\n\tcomponentDidMount () {\n\t    getEvents((response) => {\n\t    \tlet events = [];\n\t    \tfor (let i=0; i<response.length; i++) {\n\t    \t\tevents.push(response[i]);\n\t    \t}\n\t    \tthis.setState({events})\n\t    })\n\t}\n\trender() {\n\n\t\tconst localizer = BigCalendar.momentLocalizer(moment);\n\n\t\treturn (\n\t\t\t<div id=\"calendar-page\">\n\t\t\t\t<div id=\"calendar-container\">\n\t\t\t\t\t<BigCalendar \n\t\t\t\t\t\tid=\"calendar\"\n\t\t\t\t\t\tevents={this.state.events}\n\t\t\t\t\t    views={['month']}\n\t\t\t\t\t    localizer={localizer}\n\t\t\t\t\t    showMultiDayTimes\n\t\t\t\t\t    step={60}\n\t\t\t\t\t    defaultDate={new Date()}\n\t\t\t\t\t    date={this.state.dayChosen}\n\t\t\t\t\t\tonNavigate={(focusDate, flipUnit, prevOrNext) => {\n\n\t\t\t\t\t\tconst _this = this;\n\t\t\t\t\t\tlet now = new Date();\n\t\t\t\t\t\tlet nowNum = now.getDate();\n\t\t\t\t\t\tlet current = _this.state.dayChosen;\n\t\t\t\t\t\tlet currentNum = current.getDate();\n\t\t\t\t\t\tlet nextMonth = moment(current).add(1, \"month\").toDate();\n\t\t\t\t\t\tlet nextMonthNum = nextMonth.getDate();\n\t\t\t\t\t\tlet prevMonth = moment(current).subtract(1, \"month\").toDate();\n\t\t\t\t\t\tlet prevMonthNum = prevMonth.getDate();\n\n\t\t\t\t\t\t  if (prevOrNext === \"NEXT\"){\n\t\t\t\t\t\t        _this.setState({\n\t\t\t\t\t\t          dayChosen: nextMonth\n\t\t\t\t\t\t        });\n\t\t\t\t\t\t  } else if (prevOrNext === \"PREV\" && currentNum <= moment(now).add(1, \"month\").toDate().getDate()) {\n\t\t\t\t\t\t  \t\t\n\t\t\t\t\t\t  } else if (prevOrNext === \"PREV\"){\n\t\t\t\t\t\t\t  \t_this.setState({\n\t\t\t\t\t\t\t\t\tdayChosen: prevMonth\n\t\t\t\t\t\t\t  \t})\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}}\n\t\t\t\t      />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\t// return (\n\t\t// \t<div>\n\t\t// \t\t<iframe src=\"https://calendar.google.com/calendar/embed?src=51dtqg3dukqtjp0i3delels808%40group.calendar.google.com&ctz=America%2FLos_Angeles\" ></iframe>\n\t\t// \t</div>\n\t\t// );\n\n\t\t// return (\n\t\t// \t<div id=\"calendar-container\">\n\t\t// \t\t<p id=\"calendar-p\">\n\t\t// \t\t\tThis calendar feature to reference while making your reservation is not available right now.  We will get it up and running as soon as possible.\n\t\t// \t\t</p>\n\t\t// \t</div>\n\t\t// );\n\t}\n}"]},"metadata":{},"sourceType":"module"}